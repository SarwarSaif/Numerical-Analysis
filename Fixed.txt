#include<stdio.h>
#include<math.h>
#define eps 0.0001

int coef[10] , i , j , n;

double G(double x)
{
    double a = 0;
    if(coef[1]!=0){
        for(i=n;i>=0;i--)
        {
            if(i!=1) a = a + (-coef[i]*pow(x,i));
        }
        a = a / coef[1];
    }

    else{
        for(i=n;i>=0;i--)
        {
            if(i!=1 && i!=n) a = a + ((-coef[i]*pow(x,i))/pow(x,n-1));
        }
        a = (a+x)/2;
    }

    return a;
}

int main ()
{
    double x1 , x0 ;
    int maxItr;

    printf("Enter the maximun power : ");
    scanf("%d",&n);

    printf("Enter the Coefficients : ");

    for(i=n;i>=0;i--)
        scanf("%d",&coef[i]);

    printf("\nThe equation is :");

    for(i=n;i>=0;i--)
    {
        if(coef[i]>0)
            printf(" +%d*",coef[i]);
         else
            printf(" %d*",coef[i]);

        printf("x^%d ",i);
    }
    printf("= 0\n\n");

    printf("Enter initial estimate of a root and no of visible iterations : ");
    scanf("%lf %d",&x0,&maxItr);

    for(j=1 ; ; j++)
    {
        x1 = G(x0);
        if(fabs(x1-x0)<eps) break ;
        if(i<maxItr)printf("\nAfter %d iteration x1 : %lf\n", j , x1);
        x0 = x1 ;
    }

    printf("\nThe root is : %lf",x1);
    return 0;

}





